@{
    ViewBag.RegisterMomentJs = true;
    ViewBag.RegisterTabulator = true;
    ViewBag.RegisterModals = true;
}

<div class="custom-table-wrapper">
    <h2 class="text-center custom-table-heading">Articles</h2>
    <partial name="_AlertPartial" model="@TempData.GetValue<Alert>(WebConstants.AlertKey)" />
    <div class="custom-table-toolbar">
        <input id="article-search-toolbar-input" class="custom-table-toolbar-input custom-table-toolbar-element" type="text"
               placeholder="Search articles..." />
        <a id="article-submit-search-btn" href="javascript:void(0)" class="custom-table-btn custom-table-toolbar-element">Submit</a>
        <a asp-action="Create" class="custom-table-btn custom-table-toolbar-element">Create</a>
        <select id="categories-select-list" class="custom-table-select"><option value="">Select a category...</option></select>
        <select id="authors-select-list" class="custom-table-select"><option value="">Select an author...</option></select>
    </div>
    <div id="categories-table" class="custom-table"></div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            var $articleSearchBar = $('#article-search-toolbar-input');
            $articleSearchBar.val('');

            var $articleSubmitBtn = $('#article-submit-search-btn');
            $articleSubmitBtn.on('click', function () {
                table.setFilter('name', 'like', $articleSearchBar.val());
            });

            var $categoriesSelect = $('#categories-select-list');
            $categoriesSelect.on('change', function () {
                $articleSubmitBtn.trigger('click');
            });

            $.ajax({
                url: '/api/Category/GetAllForDropdown',
                dataType: 'json',
                success: function (categories) {
                    categories.forEach(function (c) {
                        $categoriesSelect.append('<option value="' + c.id + '">' + c.name + '</option>');
                    });
                }
            });

            var $authorsSelect = $('#authors-select-list');
            $authorsSelect.on('change', function () {
                $articleSubmitBtn.trigger('click');
            });

            $.ajax({
                url: '/api/User/GetAllForDropdown',
                dataType: 'json',
                success: function (users) {
                    users.forEach(function (u) {
                        $authorsSelect.append('<option value="' + u.id + '">' + u.name + '</option>');
                    });
                }
            });

            // TODO [GM]: Extract to tag helper
            var table = new Tabulator('#categories-table', {
                height: 'auto',
                layout: 'fitColumns',
                responsiveLayout: 'collapse',
                ajaxURL: '/api/Article/GetAll',
                ajaxURLGenerator: function (url, config, params) {
                    var query = [];

                    params.filters.filter(function (f) { return f.type === 'like'; }).forEach(function (filter) {
                        query.push('keywords=' + filter.value);
                    });

                    query.push('page=' + params.page);
                    query.push('size=' + params.size);

                    var $categoriesList = $('#categories-select-list');
                    if ($categoriesList.val()) {
                        query.push('categoryId=' + $categoriesList.val());
                    }

                    var $authorsList = $('#authors-select-list');
                    if ($authorsList.val()) {
                        query.push('creatorId=' + $authorsList.val());
                    }

                    return '/api/Article/GetAll?' + query.join('&');
                },
                ajaxFiltering: true,
                pagination: 'remote',
                paginationSize: 10,
                placeholder: 'No articles found',
                resizableColumns: false,
                dataLoaded: function () {
                    modalFunctions.bindConfirmModalBtns();
                },
                columns: [
                    { formatter: "responsiveCollapse", width: 30, minWidth: 30, hozAlign: "center", resizable: false, headerSort: false, headerSort: false },
                    { field: 'id', visible: false },
                    { field: 'creatorId', visible: false },
                    { field: 'title', title: 'Title', responsive: 0, minWidth: 100, headerSort: false },
                    {
                        field: 'createdOn',
                        title: 'Created On',
                        minWidth: 100,
                        sorterParams: { format: "YYYY-MM-DDTHH:mm:ss.sssZ" },
                        formatter: 'datetime',
                        formatterParams: {
                            inputFormat: 'YYYY-MM-DD hh:mm:ss',
                            outputFormat: 'MM/DD/YYYY',
                            invalidPlaceholder: '(invalid date)'
                        },
                        responsive: 1,
                        headerSort: false
                    },
                    { field: 'creatorName', title: 'Creator', responsive: 2, minWidth: 100, headerSort: false },
                    { field: 'categoryName', title: 'Category', responsive: 2, minWidth: 100, headerSort: false },
                    {
                        title: 'Actions',
                        headerSort: false,
                        responsive: 0,
                        minWidth: 100,
                        formatter: function (cell) {
                            var container = $('<div class="custom-table-actions-col"></div>');
                            var articleId = cell.getData().id;

                            var editBtn = $('<a class="custom-table-btn" href="' + '@this.Url.Action("Edit")/' + articleId + '"><i class="fas fa-edit"></i></a>');
                            container.append(editBtn);

                            var deleteBtn = $('<a class="custom-table-btn" confirm-modal-btn confirm-modal-message="Are you sure that you want to delete this article?" href="' + '@this.Url.Action("Delete")/' + articleId + '"><i class="fas fa-trash-alt"></i>');
                            container.append(deleteBtn);

                            var detailsBtn = $('<a class="custom-table-btn" href="' + '@this.Url.Action("Details")/' + articleId + '"><i class="fas fa-eye"></i></a>');
                            container.prepend(detailsBtn);

                            return container[0];
                        }
                    }
                ]
            });
        });
    </script>
}