@{
    ViewBag.RegisterMomentJs = true;
    ViewBag.RegisterTabulator = true;
    ViewBag.RegisterModals = true;
}

<div class="custom-table-wrapper">
    <h2 class="text-center">Categories</h2>
    <partial name="_AlertPartial" model="@TempData.GetValue<Alert>(WebConstants.AlertKey)" />
    <div class="custom-table-toolbar">
        <input id="category-search-toolbar-input" class="custom-table-toolbar-input" type="text" placeholder="Search categories..." />
        <a id="category-submit-search-btn" href="javascript:void(0)" class="custom-table-btn">Submit</a>
        <a asp-action="Create" class="custom-table-btn">Create</a>
    </div>
    <div id="categories-table" class="custom-table"></div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            var $categorySearchBar = $('#category-search-toolbar-input');
            $categorySearchBar.val('');

            $('#category-submit-search-btn').on('click', function () {
                table.setFilter('name', 'like', $categorySearchBar.val());
            });

            var table = new Tabulator('#categories-table', {
                height: 'auto',
                layout: 'fitColumns',
                responsiveLayout: 'collapse',
                ajaxURL: '/api/Category/GetAll',
                ajaxURLGenerator: function (url, config, params) {
                    var query = [];

                    params.filters.filter(function (f) { return f.type === 'like'; }).forEach(function (filter) {
                        query.push('keywords=' + filter.value);
                    });

                    query.push('page=' + params.page);
                    query.push('size=' + params.size);

                    return '/api/Category/GetAll?' + query.join('&');
                },
                ajaxFiltering: true,
                pagination: 'remote',
                paginationSize: 10,
                placeholder: 'No categories found',
                resizableColumns: false,
                columns: [
                    { formatter: "responsiveCollapse", width: 30, minWidth: 30, hozAlign: "center", resizable: false, headerSort: false },
                    { field: 'id', visible: false },
                    { field: 'name', title: 'Name', responsive: 0 },
                    {
                        field: 'createdOn',
                        title: 'Created On',
                        sorterParams: { format: "YYYY-MM-DDTHH:mm:ss.sssZ" },
                        formatter: 'datetime',
                        formatterParams: {
                            inputFormat: 'YYYY-MM-DD hh:mm:ss',
                            outputFormat: 'MM/DD/YYYY',
                            invalidPlaceholder: '(invalid date)'
                        },
                        responsive: 1
                    },
                    { field: 'creatorName', title: 'Creator', responsive: 2 },
                    {
                        title: 'Actions',
                        headerSort: false,
                        responsive: 0,
                        formatter: function (cell) {
                            var div = document.createElement('div');
                            div.classList.add('custom-table-actions-col');

                            var editBtn = document.createElement('a');
                            editBtn.textContent = 'Edit';
                            editBtn.classList.add('custom-table-btn');
                            editBtn.href = '@this.Url.Action("Edit")/' + cell.getData().id;

                            div.appendChild(editBtn);

                            var deleteBtn = document.createElement('a');
                            deleteBtn.textContent = 'Delete';

                            deleteBtn.setAttribute('confirm-modal-btn', '');
                            deleteBtn.setAttribute('confirm-modal-message', 'Are you sure that you want to delete this category?');

                            deleteBtn.classList.add('custom-table-btn');
                            deleteBtn.href = '@this.Url.Action("Delete")/' + cell.getData().id;

                            div.appendChild(deleteBtn);

                            modalFunctions.bindConfirmModalBtns();

                            return div;
                        }
                    }
                ]
            });
        });
    </script>
}